@model IEnumerable<PriOrder.App.Models.WO_ORDER_CART>

@{
    ViewBag.Title = "Cart";
    //Layout = "~/Views/Shared/_Layout.cshtml";
    var TotalSum = 0M;
    var CurrBalanace = 0M;
    if (Session["userBalnace"] != null)
    {
        //CurrBalanace = Math.Abs(Convert.ToDecimal(Session["userBalnace"]));
        CurrBalanace = Convert.ToDecimal(Session["userBalnace"]);
    }
}
<section class="p-0">
    <div class="row">
        <div class="col">
            <button class="btn btn-primary btn-sm w-100 mb-2 btn-reload" type="button">Refresh Cart</button>
        </div>
        <div class="col">
            <a href="@Url.Action("Categories","Products")" class="btn btn-success btn-sm w-100">Back to shop</a>
        </div>
    </div>
</section>


<section class="p-0">
    <div class="row mb-0">
        <div class="col">
            @Html.DropDownList("CART_ITEMS", ViewBag.CART_ITEMS as List<SelectListItem>, "--Select All--", new { @class = "form-select form-select-sm" })
        </div>
        <div class="col">
            @Html.DropDownList("WO_NOTE", ViewBag.WO_NOTE as List<SelectListItem>, new { @class = "form-select form-select-sm" })
        </div>
    </div>
    <div class="row">
        <div class="col">
            <input id="WO_NOTE_VALUE" class="item-note form-control form-control-sm" type="text" value="" max="20">
        </div>
        <div class="col">
            <button class="btn btn-warning w-100 mb-2 btn-sm" type="button" id="btnNoteApply">Apply Note</button>
        </div>
    </div>
</section>


<section class="p-0 cart-items">

    @if (Model.Count() > 0)
    {
        <ul class="row">
            @Html.AntiForgeryToken()

            @foreach (var item in Model)
            {
                <li class="col-12 col-sm-12 col-md-6 item-cart card shadow-sm p-1 mb-1">
                    <article class="product-list mb-0">
                        <div class="info-wrap">
                            <input class="item-code" type="hidden" value="@item.ITEM_ID" />
                            <input class="item-rate" type="hidden" value="@item.ITEM_RATE" />
                            <input class="item-factor" type="hidden" value="@item.ITEM_FACTOR" />
                            <input class="item-note-id" type="hidden" value="@item.NOTE_ID" />
                            <input class="item-note-val" type="hidden" value="@item.NOTE_VALUE" />
                            <p class="title text-dark"> @item.ITEM_ID~@item.ITEM_NAME</p>
                        </div>
                    </article>
                    <div class="price mb-0">
                        <span class="badge bg-secondary" style="display:none">Tk: @item.ITEM_RATE, Fact: @item.ITEM_FACTOR, UOM: @item.ITEM_UNIT</span>
                        @if (!string.IsNullOrEmpty(item.NOTE_TEXT))
                        {
                        <span class='badge bg-warning'>@item.NOTE_TEXT=@item.NOTE_VALUE</span>
                        }
                    </div>
                    @{  var st = item.ITEM_RATE * item.ITEM_QTY; TotalSum += st; }
                    <div class="input-group input-group-sm">
                        <button class="btn btn-danger delete-item" type="button">
                            <i class="material-icons md-delete"></i>
                        </button>
                        <button class="btn btn-light minus-cart" type="button"> <i class="material-icons md-minus"></i> </button>
                        <input type="number" name="quantity" class="form-control quantity-cart" value="@item.ITEM_QTY" min="1">
                        <button class="btn btn-light plus-cart" type="button"> <i class="material-icons md-plus"></i> </button>
                        <button class="btn btn-secondary sub-total-new" type="button">@st</button>
                    </div>
                    <div class="input-group input-group-sm sub-total" style="display:none">
                        <button class="btn btn-secondary cart-dqty">@item.ITEM_DQTY</button>
                        <button type="button" class="form-control">x @item.ITEM_RATE = <span>@st.ToString("0.##")</span></button>
                    </div>
                </li>
            }
        </ul>

     }
     else
     {
    <div class="card text-center">
        <div class="card-body">
            <h5 class="card-title">Empty!</h5>
            <p class="card-text">Your cart is empty.</p>
            <a href="@Url.Action("Categories","Products")" c class="btn btn-primary">Browse Products</a>
        </div>
    </div>
     }
</section>

<section class="padding-around card shadow-sm bg-light">
    <dl class="dlist-align">
        <dt class="text-primary-light"><strong>Total price:</strong></dt>
        <dd class="text-end" id="total-sum-amount"><strong>@TotalSum</strong></dd>
    </dl>
    <dl class="dlist-align">
        <dt class="text-primary-light"><strong>Total discount:</strong></dt>
        <dd class="text-end" id="total-sum-discount"><strong>0.00</strong></dd>
    </dl>
    <dl class="dlist-align">
        <dt class="text-primary-light"><strong>Net payment:</strong></dt>
        <dd class="text-end" id="total-sum-payment"><strong>0.00</strong></dd>
    </dl>
    <dl class="dlist-align">
        <dt class="text-primary-light"><strong>Balance:</strong></dt>
        <dd class="text-end" id="total-sum-balance"><strong>@CurrBalanace</strong></dd>
    </dl>
    <dl class="dlist-align">
        <dt class="text-primary-light"><strong>New balance:</strong></dt>
        <dd class="text-end" id="total-sum-new-balance"><strong>0.00</strong></dd>
    </dl>
    <br>
    <div class="row">
        <div class="col">
            <button class="btn btn-secondary w-100 mb-2" type="button" id="btnPending">Pending Confirm</button>
        </div>
        <div class="col">
            <button class="btn btn-danger w-100 mb-2" type="button" id="btnConfirm">Process Order</button>
        </div>
    </div>
    
    <div class="row">
        <div class="col">
            <button class="btn btn-primary btn-sm w-100 mb-2 btn-reload" type="button">Refresh Cart</button>
        </div>
        <div class="col">
            <a href="@Url.Action("Categories","Products")" class="btn btn-success btn-sm w-100">Back to shop</a>
        </div>
    </div>
</section>

@section scripts{
    <script>
        $(document).ready(function () {
            $('.btn-reload').click(function () {
                location.href = location.href;
            });

            $('.minus-cart').click(function (e) {
                e.preventDefault();
                quantityField = $(this).next();
                if (quantityField.val() != 1) {
                    quantityField.val(parseInt(quantityField.val(), 10) - 1);
                };
                calculate_subTotal($(this));
            });
            $('.plus-cart').click(function (e) {
                e.preventDefault();
                quantityField = $(this).prev();
                quantityField.val(parseInt(quantityField.val(), 10) + 1);
                calculate_subTotal($(this));
            });
            $('.quantity-cart').on("keyup change", function () {
                var qty = $(this).val();
                if (qty == '' || qty == '0') {
                    $(this).val('1');
                    qty = 1;
                };
                var rate = $(this).parent('div.input-group').siblings('article.product-list').children('div.info-wrap').find("input.item-rate").val();
                var subTotal = parseFloat(qty) * parseFloat(rate);
                //
                $(this).siblings('button.sub-total-new').text(subTotal.toFixed(2));
                //
                $(this).parent('div.input-group').siblings('div.sub-total').children('button.form-control')
                    .find('span').text(subTotal.toFixed(2));
                var itemFact = $(this).parent('div.input-group').siblings('article.product-list').children('div.info-wrap').find("input.item-factor").val();
                var itemDQty = parseFloat(qty) / parseFloat(itemFact);
                $(this).parent('div.input-group').siblings('div.sub-total').children('button.cart-dqty').text(itemDQty.toFixed(2));
                getCartSum();
            });


            $(".delete-item").click(function (e) {
                e.preventDefault();
                var thisObj = $(this);
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        var ItemId = $(this).parent('div.input-group').siblings('article.product-list').children('div.info-wrap').find("input.item-code").val();
                        $.ajax({
                            type: "POST",
                            url: "DeleteFromCart",
                            data: { itemId: ItemId },
                            success: function (response) {
                                if (response.success) {
                                    thisObj.parent('div.input-group').parent('li.item-cart').remove();
                                    Swal.fire({ title: "Success!", text: response.messages, icon: "success", button: "Ok!" });
                                    getCartSum();
                                } else {
                                    Swal.fire({ title: "Failed!", text: response.messages, icon: "error", button: "Ok!" });
                                }
                            },
                            failure: function (response) {
                                Swal.fire({ title: "Failed!", text: response.messages, icon: "error", button: "Ok!" });
                            },
                            error: function (response) {
                                Swal.fire({ title: "Failed!", text: response.messages, icon: "error", button: "Ok!" });
                            }
                        });
                    }
                });
            });

            getCartSum();

        });
        function calculate_subTotal(thisObj) {
            var rate = thisObj.parent('div.input-group').siblings('article.product-list').children('div.info-wrap').find("input.item-rate").val();
            var subTotal = parseFloat(quantityField.val()) * parseFloat(rate);

            //
            $(thisObj).siblings('button.sub-total-new').text(subTotal.toFixed(2));
            //

            thisObj.parent('div.input-group').siblings('div.sub-total').children('button.form-control')
                .find('span').text(subTotal.toFixed(2));

            var itemFact = thisObj.parent('div.input-group').siblings('article.product-list').children('div.info-wrap').find("input.item-factor").val();
            var itemDQty = parseFloat(quantityField.val()) / parseFloat(itemFact);
            thisObj.parent('div.input-group').siblings('div.sub-total').children('button.cart-dqty').text(itemDQty.toFixed(2));

            getCartSum();
        };


        function getCartSum() {
            var totalPrices = 0;
            var totalDiscounts = 0;
            //subtotal
            $('li.item-cart').each(function () {
                var subTotal = $(this).children('div.sub-total').children('button.form-control')
                .find('span').text();
                totalPrices += parseFloat(subTotal);

                //discount
                var noteId = $(this).children('article.product-list').children('div.info-wrap')
               .find('input.item-note-id').val();
                if (noteId == "200") {
                    var noteVal = $(this).children('article.product-list').children('div.info-wrap').find('input.item-note-val').val();
                    totalDiscounts += (parseFloat(subTotal) * parseFloat(noteVal)) / 100;
                }
            });


            $('section.padding-around').find('#total-sum-amount strong').text(totalPrices.toFixed(2));
            $('section.padding-around').find('#total-sum-discount strong').text(totalDiscounts.toFixed(2));
            var netPayment = (totalPrices - totalDiscounts).toFixed(2);
            $('section.padding-around').find('#total-sum-payment strong').text(netPayment);
            var oldBalance = $('section.padding-around').find('#total-sum-balance strong').text();
            var newBalance = parseFloat(netPayment) + parseFloat(oldBalance);
            $('section.padding-around').find('#total-sum-new-balance strong').text(newBalance.toFixed(2));
        }




        $("#btnConfirm").click(function (e) {
            e.preventDefault();
            var ItemsArr = [];
            ItemsArr.length = 0;
            $('section.cart-items').children('ul.row').children('li.item-cart').each(function () {
                ItemsArr.push({
                    "ITEM_ID": $(this).children('article.product-list').children('div.info-wrap').find("input.item-code").val(),
                    "ITEM_QTY": $(this).children('div.input-group').find("input.quantity-cart").val()
                });
            });
            $.ajax({
                type: "POST",
                url: "SubmitCart",
                data: { objList: ItemsArr },
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("RequestVerificationToken",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                success: function (response) {
                    //Swal.fire({ title: "Succeeded!", text: response.messages, icon: "success" });
                    window.location.href = 'ConfirmOrder';
                },
                failure: function (response) {
                    Swal.fire("Error", response.messages);
                },
                error: function (response) {
                    Swal.fire("Error", response.responseText);
                }
            });
        });


        $("#btnNoteApply").click(function (e) {
            e.preventDefault();
            var itemCode = $("select#CART_ITEMS option").filter(":selected").val();
            var itemNote = $("select#WO_NOTE option").filter(":selected").val();
            var itemNoteVal = $("#WO_NOTE_VALUE").val();
            if (itemNote == "0" || itemNote == "" || itemNoteVal == "0" || itemNoteVal == "") {
                Swal.fire({ title: "Unable to Change!", text: "Enter Note and Value", icon: "warning" });
                return;
            }
            if (itemNote == "200") {
                var noteLim = parseFloat(itemNoteVal);
                if (noteLim > 50) {
                    Swal.fire({ title: "Unable to Change!", text: "Enter Note Value below 50", icon: "error" });
                    $("#WO_NOTE_VALUE").val('')
                    return;
                }
            }

            if (itemCode == "") {
                Swal.fire({
                    title: 'Apply all Items, Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, Apply to all!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        change_order_note("0", itemNote, itemNoteVal);
                    }
                });
            }
            else {
                change_order_note(itemCode, itemNote, itemNoteVal);
            }
        });

        function change_order_note(itmCode, notId, notVal) {
            $.ajax({
                type: "POST",
                url: "ChangeOrderNote",
                data: { itmCod: itmCode, noId: notId, noVal: notVal },
                success: function (response) {
                    Swal.fire({ title: "Success!", text: response.messages, icon: "success", showConfirmButton: false, timer: 1000 });
                    location.reload();
                },
                failure: function (response) {
                    Swal.fire({ title: "Error!", text: response.responseText, icon: "error" });
                },
                error: function (response) {
                    Swal.fire({ title: "Error!", text: response.responseText, icon: "error" });
                }
            });
        };

        $("#btnPending").click(function (e) {
            e.preventDefault();
            window.location.href = 'ConfirmOrder';
        });
    </script>

}
