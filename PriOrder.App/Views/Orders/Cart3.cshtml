@model IEnumerable<PriOrder.App.Models.WO_ORDER_CART>

@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var TotalSum = 0M;
    var CurrBalanace = 0M;
    if (Session["userBalnace"] != null)
    {
        CurrBalanace = Math.Abs(Convert.ToDecimal(Session["userBalnace"]));
    }
}
<button class="btn btn-primary w-100 mb-2" type="button" id="btnReload"> Refresh Cart Items</button>


<section class="p-3">
    <ul class="row">
        @if (Model != null)
        {
            @Html.AntiForgeryToken()

            foreach (var item in Model)
            {
                <li class="col-12 col-sm-12 col-md-6 item-cart">
                    <article class="product-list mb-2">
                        <div>
                            <a href="#" class="img-wrap"> <img src="~/Images/Products/@item.ITEM_ID-.jpg" alt="@item.ITEM_ID"> </a>
                        </div>
                        <div class="info-wrap">
                            <input class="item-code" type="hidden" value="@item.ITEM_ID" />
                            <input class="item-rate" type="hidden" value="@item.ITEM_RATE" />
                            <p class="title text-primary"> @item.ITEM_ID </p>
                            <p class="title"> @item.ITEM_NAME</p>
                        </div>
                    </article>
                    <div class="price mb-2">
                        <span class="badge bg-dark">UOM: @item.ITEM_UNIT</span>
                        <span class="badge bg-primary">Stk: @item.NEW_STOCK</span>
                        <span class="badge bg-warning">Tk: @item.ITEM_RATE</span>
                        <span class="badge bg-info">Fact: @item.ITEM_FACTOR</span>
                        <span class="badge bg-danger">Inc: 0.0%</span>
                    </div>
                    <div class="input-group input-group-sm">
                        <button class="btn btn-danger delete-item" type="button">
                            <i class="material-icons md-delete"></i>
                        </button>
                        <button class="btn btn-light minus-cart" type="button"> <i class="material-icons md-minus"></i> </button>
                        <input type="number" name="quantity" class="form-control quantity-cart" value="@item.ITEM_QTY" min="1">
                        <button class="btn btn-light plus-cart" type="button"> <i class="material-icons md-plus"></i> </button>
                    </div>
                    <div class="input-group input-group-sm sub-total">
                        @{  var st = item.ITEM_RATE * item.ITEM_QTY; TotalSum += st; }
                        <button type="button" class="form-control">x @item.ITEM_RATE = <span> @st</span></button>
                    </div>
                    <div class="input-group input-group-sm items-select-note">
                        @Html.DropDownList("WO_NOTE", item.WO_NOTE as IEnumerable<SelectListItem>, new { @class = "form-select" })
                        <input class="item-note form-control form-control-sm" type="text" value="@item.NOTES">
                    </div>
                    <hr />
                </li>
                                }
                            }
                            else
                            {
                                <li class="title-sm text-white">No Cart item found</li>
                            }
    </ul>
</section>

<hr class="divider">
@{ var newBalance = CurrBalanace - TotalSum;}
<section class="padding-around">
    <dl class="dlist-align">
        <dt class="text-muted"><strong>Total price:</strong></dt>
        <dd class="text-end" id="total-sum-amount"><strong>@TotalSum</strong></dd>
    </dl>
    <dl class="dlist-align">
        <dt class="text-muted"><strong>Balance:</strong></dt>
        <dd class="text-end" id="total-sum-balance">@CurrBalanace</dd>
    </dl>
    <dl class="dlist-align">
        <dt class="text-muted"><strong>New Balance:</strong></dt>
        <dd class="text-end" id="total-sum-new-balance"><strong>@newBalance</strong></dd>
    </dl>
    <br>
    <button class="btn btn-success w-100 mb-2" type="button" id="btnConfirm"> Confirm </button>
    <a href="@Url.Action("Categories","Products")" class="btn btn-outline-primary w-100">  Back to shop</a>
    <br> <br>
</section>


@section scripts{
    <script>
        $(document).ready(function () {
            $('#btnReload').click(function () {
                location.href = location.href;
            });

            $('.minus-cart').click(function (e) {
                e.preventDefault();
                quantityField = $(this).next();
                if (quantityField.val() != 1) {
                    quantityField.val(parseInt(quantityField.val(), 10) - 1);
                };
                calculate_subTotal($(this));
            });
            $('.plus-cart').click(function (e) {
                e.preventDefault();
                quantityField = $(this).prev();
                quantityField.val(parseInt(quantityField.val(), 10) + 1);
                calculate_subTotal($(this));
            });
            $('.quantity-cart').on("keyup change", function () {
                var qty = $(this).val();
                if (qty == '' || qty == '0') {
                    $(this).val('1');
                };
                calculate_subTotal($(this));
            });


            $(".delete-item").click(function (e) {
                e.preventDefault();
                var thisObj = $(this);
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        var ItemId = $(this).parent('div.input-group').siblings('article.product-list').children('div.info-wrap').find("input.item-code").val();
                        $.ajax({
                            type: "POST",
                            url: "DeleteFromCart",
                            data: { itemId: ItemId },
                            success: function (response) {
                                if (response.success) {
                                    thisObj.parent('div.input-group').parent('li.item-cart').remove();
                                    Swal.fire({ title: "Success!", text: response.messages, icon: "success", button: "Ok!" });
                                } else {
                                    Swal.fire({ title: "Failed!", text: response.messages, icon: "error", button: "Ok!" });
                                }
                            },
                            failure: function (response) {
                                Swal.fire({ title: "Failed!", text: response.messages, icon: "error", button: "Ok!" });
                            },
                            error: function (response) {
                                Swal.fire({ title: "Failed!", text: response.messages, icon: "error", button: "Ok!" });
                            }
                        });
                    }
                });
                getCartSum();
            });
        });
        function calculate_subTotal(thisObj) {

            var rate = thisObj.parent('div.input-group').siblings('article.product-list').children('div.info-wrap').find("input.item-rate").val();

            var subTotal = parseFloat(quantityField.val()) * parseFloat(rate);

            thisObj.parent('div.input-group').siblings('div.sub-total').children('button.form-control')
                .find('span').text(subTotal.toFixed(2));

            getCartSum();
        };
        function getCartSum() {
            var totalPrices = 0;
            $('li.item-cart').each(function () {
                var subTotal = $(this).children('div.sub-total').children('button.form-control')
                .find('span').text();
                totalPrices += parseFloat(subTotal);
            });
            $('section.padding-around').find('#total-sum-amount strong').text(totalPrices.toFixed(2));

            var oldBalance = $('section.padding-around').find('#total-sum-balance').text();
            var newBalance = parseFloat(oldBalance) - parseFloat(totalPrices);
            $('section.padding-around').find('#total-sum-new-balance strong').text(newBalance.toFixed(2));
        }

        $("#btnConfirm").click(function (e) {
            e.preventDefault();
            var ItemsArr = [];
            ItemsArr.length = 0;
            $('section.cart-items').children('article.item-cart').each(function () {
                ItemsArr.push({
                    "ITEM_ID": $(this).children('figure.itemside').children('figcaption.info').find("input.item-code").val(),
                    "ITEM_QTY": $(this).children('div.align-items-center').children('div.col').children('div.input-group').find("input.quantity-cart").val(),
                    "ITEM_RATE": $(this).children('figure.itemside').children('figcaption.info').find("input.item-rate").val(),
                    "NOTE_ID": $(this).children('div.items-select-note').find("select.form-select").val(),
                    "NOTE_TEXT": $(this).children('div.items-select-note').find("input.item-note").val()
                });
            });
            console.log(ItemsArr);
            $.ajax({
                type: "POST",
                url: "SubmitCart",
                data: { objList: ItemsArr },
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("RequestVerificationToken",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                success: function (response) {
                    Swal.fire("messages", response.messages);
                },
                failure: function (response) {
                    Swal.fire("messages", response.responseText);
                },
                error: function (response) {
                    Swal.fire("messages", response.responseText);
                }
            });
        })
    </script>

}